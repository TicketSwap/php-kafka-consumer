name: Tests

on: [push]

jobs:
  run:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ['7.4']
        dependencies: ['normal', 'highest','lowest']
        librdkafka-version: ['1.5.2']
        rdkafka-version: ['4.0.4']

    name: PHP ${{ matrix.php-versions }} tests with ${{ matrix.dependencies }} dependencies
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v1
        id: librdkafka-cache
        with:
          path: librdkafka-${{ matrix.librdkafka-version }}
          key: ${{ matrix.php-versions }}-librdkafka-${{ matrix.librdkafka-version }}

      - name: Install librdkafka
        if: steps.librdkafka-cache.outputs.cache-hit != 'true'
        run: |
          curl --silent --show-error --location --fail --retry 3 --output librdkafka.tar.gz https://github.com/edenhill/librdkafka/archive/v${{ matrix.librdkafka-version }}.tar.gz \
            && tar -xzvf librdkafka.tar.gz \
            && rm librdkafka.tar.gz \
            && cd librdkafka-${{ matrix.librdkafka-version }} \
            && ./configure \
            && make \
            && sudo make install

      - name: Install librdkafka from cache
        if: steps.librdkafka-cache.outputs.cache-hit == 'true'
        run: |
          cd librdkafka-${{ matrix.librdkafka-version }} \
          && sudo make install

      - uses: actions/cache@v1
        id: composer-cache
        with:
          path: vendor
          key: ${{ matrix.php-versions }}-${{ matrix.dependencies }}-composer

      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: ${{ matrix.php-versions }}
          tools: pecl
          extensions: rdkafka-${{ matrix.rdkafka-version }}

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        run: |
          if [ "${{ matrix.dependencies }}" = "normal" ]; then composer install --prefer-dist --no-progress --no-suggest; fi;
          if [ "${{ matrix.dependencies }}" = "lowest" ]; then composer update --prefer-lowest --prefer-dist --no-progress --no-suggest; fi;
          if [ "${{ matrix.dependencies }}" = "highest" ]; then composer update --prefer-dist --no-progress --no-suggest; fi;

      - name: Run test suite
        run: composer run-script test
